#
# CI build that assembles artifacts and runs tests.
# If validation is successful this workflow releases from the main dev branch.
#
# - skipping CI: add [skip ci] to the commit message
# - skipping release: add [skip release] to the commit message
#
name: CI

on:
  push:
    branches: ['main']
    tags-ignore: [v*] # release tags are autogenerated after a successful CI, no need to run CI against them
  pull_request:
    branches: ['**']

jobs:

  build:
    strategy:
      matrix:
        java: [ '11',  '17', '20', '21-ea' ]
        jdk: [ 'temurin' ]
        os: [ 'ubuntu-latest' ]
    runs-on: ${{ matrix.os }}
    name: Java ${{ matrix.java }} ${{ matrix.jdk }}
    if: "! contains(toJSON(github.event.commits.*.message), '[skip ci]')"
    steps:
      - name: Check out code
        uses: actions/checkout@v3
        with:
          fetch-depth: '0'

      - name: Gradle wrapper validation
        uses: gradle/wrapper-validation-action@v1

      - name: Set up Java
        uses: actions/setup-java@v3
        with:
          java-version: ${{ matrix.java }}
          distribution: ${{ matrix.jdk }}

      - name: Gradle build
        run: ./gradlew rewriteDryRun build

  #
  # Release job, only for pushes to the main development branch
  #
  release:
    runs-on: ubuntu-latest
    needs: [build] # build job must pass before we can release
    steps:
      - name: Check out code
        uses: actions/checkout@v3
        with:
          fetch-depth: '0'

      - name: Gradle wrapper validation
        uses: gradle/wrapper-validation-action@v1

      - name: Set up Java
        uses: actions/setup-java@v3
        with:
          java-version: 11
          distribution: 'zulu'

      - name: Release to Sonatype
        # Release job, only for pushes to the main branch
        if: github.event_name == 'push'
          && github.ref == 'refs/heads/main'
          && github.repository == 'mockitoplus/mockitoplus'
          && !contains(toJSON(github.event.commits.*.message), '[skip release]')

        run: ./gradlew clean build githubRelease publishToSonatype closeAndReleaseStagingRepository
        env:
          GITHUB_TOKEN: ${{secrets.GITHUB_TOKEN}}
          NEXUS_TOKEN_USER: ${{secrets.SONATYPE_USER}}
          NEXUS_TOKEN_PWD: ${{secrets.SONATYPE_PASSWORD}}
          PGP_KEY: ${{secrets.PGP_KEY}}
          PGP_PWD: ${{secrets.PGP_PWD}}
