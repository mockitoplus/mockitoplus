buildscript {
  repositories {
        gradlePluginPortal()
  }

  dependencies {
        classpath 'org.shipkit:shipkit-changelog:2.0.1'
        classpath 'org.shipkit:shipkit-auto-version:2.1.0'
        classpath "io.github.gradle-nexus:publish-plugin:2.0.0"
        classpath "org.revapi:gradle-revapi:1.8.0"
    }
}

plugins {
    id 'jacoco'
    id 'java'
    id "java-library"
    id("org.openrewrite.rewrite") version("6.28.0")
    id("org.kordamp.gradle.project-enforcer") version("0.14.0")
}

apply plugin: 'org.revapi.revapi-gradle-plugin'

apply from: 'gradle/java-publication.gradle'
apply from: 'gradle/shipkit.gradle'

repositories {
    mavenCentral()
}

enforce {

    rule(enforcer.rules.BanDuplicateClasses) { r ->
      r.ignoreClasses.addAll([ "**/package-info"])
    }

    rule(enforcer.rules.BannedDependencies) { r ->
      r.excludes.addAll(
          [ "javax.annotation:javax.annotation-api",
            "jakarta.annotation:jakarta.annotation-api"] )
    }
}

java {
    toolchain {
        languageVersion = JavaLanguageVersion.of(11)
    }
}



tasks.withType(JavaCompile) {
  options.deprecation = true
  options.encoding = 'UTF-8'
  options.compilerArgs += ["-Xlint:all", "-Werror"]
}

tasks.withType(Javadoc) {
  options.addStringOption('Xdoclint:none', '-quiet')
}

def slf4jVersion = '2.0.16'

dependencies {
    implementation 'org.mockito:mockito-core:5.14.2'
    testImplementation 'org.assertj:assertj-core:3.27.1'
    testImplementation "org.slf4j:slf4j-api:${slf4jVersion}"
    testImplementation "org.slf4j:slf4j-simple:${slf4jVersion}"
    testImplementation(platform("org.junit:junit-bom:5.11.4"))
    testImplementation 'org.junit.jupiter:junit-jupiter-api'
    testImplementation "org.junit.jupiter:junit-jupiter"
    testRuntimeOnly 'org.junit.jupiter:junit-jupiter-engine'

    rewrite(platform("org.openrewrite.recipe:rewrite-recipe-bom:latest.release"))
    rewrite("org.openrewrite.recipe:rewrite-logging-frameworks")
    rewrite("org.openrewrite.recipe:rewrite-testing-frameworks")
    rewrite("org.openrewrite.recipe:rewrite-migrate-java")
}

group = 'io.github.mockitoplus'
description = 'mockitoplus'

revapi {
  oldGroup = "io.github.mockitoplus"
  oldName = "mockitoplus"
  oldVersion = "0.6.0"
}

test {
    useJUnitPlatform()
    failFast = true
    maxParallelForks = 5
}

jacoco {
    toolVersion = "0.8.12"
}

jacocoTestReport {
    dependsOn test
}

jacocoTestCoverageVerification {
    violationRules {
        rule {
            limit {
                minimum = 0.85
            }
        }
    }
}


rewrite {
  activeRecipe("io.github.mockitoplus.internal.InternalBestPractices")
}
