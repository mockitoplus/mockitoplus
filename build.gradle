buildscript {
  repositories {
        gradlePluginPortal()
  }

  dependencies {
        classpath 'org.shipkit:shipkit-changelog:1.2.0'
        classpath 'org.shipkit:shipkit-auto-version:1.2.2'
        classpath "io.github.gradle-nexus:publish-plugin:1.3.0"
    }
}

plugins {
    id 'jacoco'
    id 'java'
    id "java-library"
    id "maven-publish"
    id "org.openrewrite.rewrite" version "6.3.18"
}

apply from: 'gradle/shipkit.gradle'

repositories {
    mavenLocal()
    maven {
        url = uri('https://repo.maven.apache.org/maven2')
    }
}

java {
    sourceCompatibility = JavaVersion.VERSION_11
    targetCompatibility = JavaVersion.VERSION_11
    withSourcesJar()
    withJavadocJar()
}

tasks.withType(JavaCompile) {
  options.deprecation = true
  options.encoding = 'UTF-8'
  options.compilerArgs += ["-Xlint:all", "-Werror"]
}

tasks.withType(Javadoc) {
  options.addStringOption('Xdoclint:none', '-quiet')
}

dependencies {
    implementation 'org.mockito:mockito-core:5.6.0'
    testImplementation 'org.assertj:assertj-core:3.24.2'
    testImplementation "org.junit.jupiter:junit-jupiter:5.10.0"
    testImplementation 'org.slf4j:slf4j-api:1.7.36'
    testImplementation 'org.slf4j:slf4j-simple:1.7.36'
    testImplementation 'org.junit.jupiter:junit-jupiter-api:5.10.0'
    testRuntimeOnly 'org.junit.jupiter:junit-jupiter-engine:5.10.0'
}

group = 'io.github.mockitoplus'
description = 'mockitoplus'

jacoco {
    toolVersion = "0.8.7"
}

test {
    useJUnitPlatform()
    failFast = true
    maxParallelForks = 5
}

jacocoTestReport {
    dependsOn test
}

jacocoTestCoverageVerification {
    violationRules {
        rule {
            limit {
                minimum = 0.85
            }
        }
    }
}

publishing {
    publications {
        mavenJava(MavenPublication) {
            from(components.java)
        }
    }
}

dependencies {
    rewrite(platform("org.openrewrite.recipe:rewrite-recipe-bom:2.3.1"))
    rewrite("org.openrewrite.recipe:rewrite-testing-frameworks")
    testImplementation "org.junit.jupiter:junit-jupiter:5.10.0"
    rewrite("org.openrewrite.recipe:rewrite-logging-frameworks")
}

rewrite {
    failOnDryRunResults = true
    activeRecipe("org.openrewrite.java.testing.junit5.JUnit5BestPractices")
    activeRecipe("org.openrewrite.java.logging.slf4j.Slf4jBestPractices")
}
