buildscript {
  repositories {
        gradlePluginPortal()
  }

  dependencies {
        classpath 'org.shipkit:shipkit-changelog:2.0.1'
        classpath 'org.shipkit:shipkit-auto-version:2.0.11'
        classpath "io.github.gradle-nexus:publish-plugin:2.0.0"
    }
}

plugins {
    id 'jacoco'
    id 'java'
    id "java-library"
    id("org.openrewrite.rewrite") version("6.25.0")
}

apply from: 'gradle/java-publication.gradle'
apply from: 'gradle/shipkit.gradle'

repositories {
    mavenLocal()
    mavenCentral()
}

java {
    sourceCompatibility = JavaVersion.VERSION_11
    targetCompatibility = JavaVersion.VERSION_11
    toolchain {
        languageVersion = JavaLanguageVersion.of(11)
    }
}



tasks.withType(JavaCompile) {
  options.deprecation = true
  options.encoding = 'UTF-8'
  options.compilerArgs += ["-Xlint:all", "-Werror"]
}

tasks.withType(Javadoc) {
  options.addStringOption('Xdoclint:none', '-quiet')
}

def slf4jVersion = '2.0.16'

dependencies {
    implementation 'org.mockito:mockito-core:5.14.1'
    testImplementation 'org.assertj:assertj-core:3.26.3'
    testImplementation "org.slf4j:slf4j-api:${slf4jVersion}"
    testImplementation "org.slf4j:slf4j-simple:${slf4jVersion}"
    testImplementation(platform("org.junit:junit-bom:5.11.2"))
    testImplementation 'org.junit.jupiter:junit-jupiter-api'
    testImplementation "org.junit.jupiter:junit-jupiter"
    testRuntimeOnly 'org.junit.jupiter:junit-jupiter-engine'

    rewrite(platform("org.openrewrite.recipe:rewrite-recipe-bom:2.21.0"))
    rewrite("org.openrewrite.recipe:rewrite-logging-frameworks")
    rewrite("org.openrewrite.recipe:rewrite-testing-frameworks")
    rewrite("org.openrewrite.recipe:rewrite-migrate-java")
}

group = 'io.github.mockitoplus'
description = 'mockitoplus'

test {
    useJUnitPlatform()
    failFast = true
    maxParallelForks = 5
}

jacoco {
    toolVersion = "0.8.12"
}

jacocoTestReport {
    dependsOn test
}

jacocoTestCoverageVerification {
    violationRules {
        rule {
            limit {
                minimum = 0.85
            }
        }
    }
}


rewrite {
  activeRecipe("io.github.mockitoplus.internal.InternalBestPractices")
}